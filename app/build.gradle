/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.8/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation libs.guava

    implementation 'org.json:json:20250107'

    // JavaFX modules
    def javafxVersion = '21.0.1'
    def osName = org.gradle.internal.os.OperatingSystem.current()

    ['base', 'graphics', 'controls', 'fxml'].each { module ->
        implementation "org.openjfx:javafx-${module}:${javafxVersion}:${osName.familyName}"
    }
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'associationassignmentsystem.AssignmentServer'
}

tasks.register('runClient', JavaExec) {
    group = 'application'
    description = 'Run the JavaFX Client GUI'
    classpath = sourceSets.main.runtimeClasspath
    mainClass.set('associationassignmentsystem.GuiMain')
    jvmArgs = [
        '--module-path', classpath.asPath,
        '--add-modules', 'javafx.controls,javafx.fxml'
    ]
}

tasks.named('run') {
    jvmArgs = [
        '--module-path', classpath.asPath,
        '--add-modules', 'javafx.controls,javafx.fxml'
    ]
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
